doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        include ../public/components/color-lab.pug
        link(rel="stylesheet", href="/css/addPalette.css")
        title Lemon Teams: Dashboard
    body#body 
        include ../public/layouts/navigation.pug
        form(action="", method="post") 
            h2 Add Color
            p You can add a maximum of 10 colors and a minimum of 3 colors. Select colors from the bar and submit.
            .info
                input(type="text", name="name" placeholder="Name of Color Palette" required autocomplete="off")
                input(text="type", name="description" placeholder="Description... (Optional)" autocomplete="off")
                input(type="text", name="tags", placeholder="Searching tags... (use space to differentiate)" autocomplete="off")
                select(name="visibility")
                    option(value="public") Public 
                    option(value="private") Private

            each i in [1..10]
                .colors
                    input(type="color", name=`color${i}`, id=`colorInput${i}`, oninput=`updateColor(${i}, 'color'); showNextInput(${i})`, autocomplete="off")
                    .background(id=`background${i}`)
                    input(type="text", name=`color${i}Hex`, id=`colorHex${i}`, oninput=`updateColor(${i}, 'text'); showNextInput(${i})`, value="" #{i <= 3 ? 'required' : ''} autocomplete="off")
            
            input(type="submit", value="Publish Palette")

        include ../public/layouts/footer.pug
        script(src="/js/addPalette.js")
        script.
            document.addEventListener('DOMContentLoaded', () => {
                // Hide all input fields except the first one
                for (let i = 2; i <= 10; i++) {
                    document.getElementById(`colorInput${i}`).parentElement.style.display = 'none';
                }
            });

            function showNextInput(currentIndex) {
                // Check if the current color input is filled
                const currentColorInput = document.getElementById(`colorInput${currentIndex}`);
                const currentColorHexInput = document.getElementById(`colorHex${currentIndex}`);
                
                if (currentColorInput.value && currentColorHexInput.value) {
                    // Show the next color input field
                    const nextInput = document.getElementById(`colorInput${currentIndex + 1}`);
                    if (nextInput) {
                        nextInput.parentElement.style.display = 'block';
                    }
                }
            }
