doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    include ../public/components/color-lab.pug
    link(rel="stylesheet", href="/css/addPalette.css")
    title Lemon Teams: Dashboard
  body#body 
    include ../public/layouts/navigation.pug
    form(action="", method="post") 
      h2 Add Color
      p You can add a maximum of 10 colors and a minimum of 3 colors. Select colors from the bar and submit.
      .info
        input(type="text", name="name" placeholder="Name of Color Palette" required autocomplete="off")
        input(type="text", name="description" placeholder="Description... (Optional)" autocomplete="off" id="description")
        button(type="button", id="descriptionGenerate", style="color: black; background: yellow; padding: 7px; border-radius: 6px;") Generate Description 
        input(type="text", name="tags", placeholder="Searching tags... (use space to differentiate)" autocomplete="off")
        select(name="visibility")
          option(value="public") Public 
          option(value="private") Private
      each i in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        .colors(style=`display: ${i === 1 ? 'flex' : 'none'}`)
          input(
            type="color" 
            name=`color${i}` 
            id=`colorInput${i}` 
            oninput=`updateColor(${i}, 'color'); checkAndShowNext(${i})` 
            autocomplete="off"
            required=(i <= 3)
          )
          .background(id=`background${i}`)
          input(
            type="text" 
            name=`color${i}Hex` 
            id=`colorHex${i}` 
            oninput=`updateColor(${i}, 'text'); checkAndShowNext(${i})` 
            value="" 
            required=(i <= 3)
            autocomplete="off"
          )
      input(type="submit", value="Publish Palette")
    include ../public/layouts/footer.pug

    script(src="/js/addPalette.js")
    script(type="importmap") 
      {
        "imports":{
          "@google/generative-ai":"https://esm.run/
@google/generative-ai"
        }
      }
    script(type="module").
      const apiKey = 'AIzaSyAVO7dLCfModBOCg1Z2_RXX6SuxrIyqVYo'; // Your API Key
      
      // Hide additional color inputs initially
      for (let i = 2; i <= 10; i++) {
        document.getElementById(`colorInput${i}`).parentElement.style.display = 'none';
      }

      function updateColor(index, type) {
        const colorInput = document.getElementById(`colorInput${index}`);
        const colorHex = document.getElementById(`colorHex${index}`);
        const background = document.getElementById(`background${index}`);

        if (type === 'color') {
          const colorValue = colorInput.value;
          background.style.backgroundColor = colorValue;
          colorHex.value = colorValue;
        } else if (type === 'text') {
          const colorValue = colorHex.value;
          background.style.backgroundColor = colorValue;
          colorInput.value = colorValue;
        }
      }

      function checkAndShowNext(currentIndex) {
        const colorInput = document.getElementById(`colorInput${currentIndex}`);
        const colorHex = document.getElementById(`colorHex${currentIndex}`);
        const nextInputIndex = currentIndex + 1;
        const nextColorInput = document.getElementById(`colorInput${nextInputIndex}`);

        if (colorInput.value && colorHex.value && nextColorInput && nextColorInput.parentElement.style.display === 'none') {
          nextColorInput.parentElement.style.display = 'flex';
        }
      }

      // Function to generate the description using Google API directly from the frontend
          import { GoogleGenerativeAI } from "@google/generative-ai";
      async function generateDescription() {
        const colors = [];
        for (let i = 1; i <= 10; i++) {
          const colorHex = document.getElementById(`colorHex${i}`).value;
          if (colorHex) colors.push(colorHex);
        }

        const prompt = `Generate a concise description (20-30 words) for the color palette using these colors: ${colors.join(", ")}. Do not mention any company or model names. Simply say you're Lemon AI, developed by Puneet Kumar, if needed. Focus only on the color description.`;
          const genAI = new GoogleGenerativeAI("AIzaSyAVO7dLCfModBOCg1Z2_RXX6SuxrIyqVYo");
          const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

          const result = await model.generateContent(prompt);
          document.getElementById("description").value = result.response.text();
      }
      // Add event listener to button for generating description
      document.getElementById("descriptionGenerate").addEventListener("click", generateDescription);
